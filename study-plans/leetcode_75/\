pub struct Solution;

impl Solution {
    fn two_more_exists(state: &mut Vec<i32>, candidate: i32) -> bool {
        state.sort();
        let lo = 0, hi = state.len();
        true
    }
    pub fn increasing_triplet(nums: Vec<i32>) -> bool {
        let mut state: Vec<i32> = Vec::new();
        for i in (0..nums.len()).rev() {
            if Self::two_more_exists(&mut state, nums[i]) {
                return true;
            }
        }
        false
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn sample1() {
        let triplet_existence = Solution::increasing_triplet(vec![2, 1, 5, 0, 4, 6]);
        assert_eq!(triplet_existence, true);
    }
}
